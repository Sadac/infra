apiVersion: apps/v1
kind: Deployment
metadata:
  name: posts-depl
spec:
  replicas: 1 # the number of pods we want to create running an image
  # find the pods with the label app: posts. [app: posts doesn't have a special meaning]
  # it could be anything
  selector:
    matchLabels:
      app: posts
  template: # We specify the exact configuration
    metadata: # metadata works the same way selector does. Just to tell to the Deploy what pods should manage
      labels:
        app: posts # imagine as an html tag that will be selected in js by this label
    spec:
      containers:
        - name: posts
          image: roccosada/posts:latest
---
# Create the cluster Service.
# We can create a separate service or leave it just here.
apiVersion: v1
kind: Service
metadata:
  name: posts-clusterip-srv # to distinguish of the posts-srv.yaml already created
spec:
  selector: # tell the service what pods it is going to allow access to
    app: posts
  type: ClusterIP # this is the default cluster kubernetes create for us. We can write it here or not
  ports:
    - name: posts
      protocol: TCP
      port: 4000 # Node Service Port
      targetPort: 4000 # App running container
